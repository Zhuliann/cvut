#include <cmath>
#include <iostream>
#include <cstdlib>
#include <fstream>
#include <string>

using namespace std;

class Polymer {
	protected:
		float theta;
		float b;
		float c;
				
	public:
		Polymer(float c1, float b1){
			theta = acos((c1 - 1) / (1 + c1));
			b = b1;
			c = c1;
		};
				
		float** runSimulation(int n){
			float **result = new float*[n];
			result[0] = new float[2];
			result[0][0] = 0.0;
			result[0][1] = 0.0;
			
			float angle = 0.0;
			for (int i=1;i<n;i++){
				result[i] = new float[2];
				float random_number = static_cast <float> (rand()) / static_cast <float> (RAND_MAX);
			    //float rand_direction = (random_number > 0.5)?1:-1;
			    float rand_direction;
			    if (random_number > 0.5){
			    	rand_direction = 1;
				}else{
					rand_direction = -1;
				}
			    
			    angle = angle + rand_direction * theta;
			  
			    float dx = b*cos(angle);
			    float dy = b*sin(angle);
				
				result[i][0] = result[i-1][0] + dx;
				result[i][1] = result[i-1][1] + dy;
			}
			return result;
		}
		
		float get_re(int n){
			return n * b * b * c;
		}
};

int main(){

	//Polymer poly = Polymer(4.7, 0.84);
	//Polymer polystyren = Polymer(9.5, 1.8);
	float c, b;
	string selection;
	
	do {
		cout << "Select the polymer:\n";
		cout << "1. 1,4-polyisopren\n";
		cout << "2. Atakticky polystyren\n";
		cout << "3. Your option\n";
		cin >> selection;
		
		if (selection=="1"){
			c = 4.7;
			b = 0.84;
		}else if (selection=="2"){
			c = 9.5;
			b = 1.8;
		}else if (selection=="3"){
			cout << "Select C: ";
			cin >> c;
			cout << "Select B: ";
			cin >> b;
		}else{
			cout << "Please, select 1,2, or 3.\n";
		}
	}while ((selection!="1")&&(selection!="2")&&(selection!="3"));

	int n; // = 500;
	cout << "Zadej N: ";
	cin >> n;
	
	Polymer poly = Polymer(c, b);
	
	float **res = poly.runSimulation(n);
	ofstream resultFile;
	resultFile.open ("result.txt");
	for (int i=0;i<n;i++){
		resultFile << res[i][0] << "," << res[i][1] << "\n";
	}
	resultFile.close();
	float r_e_real = pow(res[n-1][0] - res[0][0], 2.0) + pow(res[n-1][1] - res[0][1], 2.0);
	cout << "Real length: " << r_e_real << "\n";
	cout << "Theoretical length: " << poly.get_re(n) << "\n";
	//delete poly;
}
